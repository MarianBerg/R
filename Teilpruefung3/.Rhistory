#Aufgabe: Liniendiagramme mit ggplot2
#
#a)
#
#Erstelle ein Liniendiagramm mit ggplot2 in R unter Verwendung des Datensatzes „airquality“.
#
#1. Lade den Datensatz "airquality" und bereinige fehlende Werte.
library(ggplot2)
library(tidyverse)
cleaned_up_airquality_df <- airquality %>%
as_tibble() %>%
drop_na()
View(cleaned_up_airquality_df)
#
#2. Erstelle ein einfaches Liniendiagramm mit ggplot2, das den Verlauf der Ozonkonzentration im Laufe der Tage darstellt.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point()
#Aufgabe: Liniendiagramme mit ggplot2
#
#a)
#
#Erstelle ein Liniendiagramm mit ggplot2 in R unter Verwendung des Datensatzes „airquality“.
#
#1. Lade den Datensatz "airquality" und bereinige fehlende Werte.
library(ggplot2)
library(tidyverse)
cleaned_up_airquality_df <- airquality %>%
as_tibble() %>%
drop_na()
#
#2. Erstelle ein einfaches Liniendiagramm mit ggplot2, das den Verlauf der Ozonkonzentration im Laufe der Tage darstellt.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point()
#
#2. Erstelle ein einfaches Liniendiagramm mit ggplot2, das den Verlauf der Ozonkonzentration im Laufe der Tage darstellt.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month))) +
geom_line(linetype = 2, size = 1) +
geom_point()
#
#2. Erstelle ein einfaches Liniendiagramm mit ggplot2, das den Verlauf der Ozonkonzentration im Laufe der Tage darstellt.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month))) +
geom_line(linetype = 1, size = 1) +
geom_point()
#
#2. Erstelle ein einfaches Liniendiagramm mit ggplot2, das den Verlauf der Ozonkonzentration im Laufe der Tage darstellt.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month), group = Month)) +
geom_line(linetype = 1, size = 1) +
geom_point()
#
#2. Erstelle ein einfaches Liniendiagramm mit ggplot2, das den Verlauf der Ozonkonzentration im Laufe der Tage darstellt.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month), group = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point()
#
#2. Erstelle ein einfaches Liniendiagramm mit ggplot2, das den Verlauf der Ozonkonzentration im Laufe der Tage darstellt.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month), group = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point() +
labels(title = "Ozonkonzentration in den Monaten 5 bis 9",
color = "Monate")
#
#2. Erstelle ein einfaches Liniendiagramm mit ggplot2, das den Verlauf der Ozonkonzentration im Laufe der Tage darstellt.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month), group = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point() +
labels(title = "Ozonkonzentration in den Monaten 5 bis 9",
x = "Tage",
y = "Ozonkonzentration",
color = "Monate")
#
#2. Erstelle ein einfaches Liniendiagramm mit ggplot2, das den Verlauf der Ozonkonzentration im Laufe der Tage darstellt.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month), group = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point() +
labels(title = "Ozonkonzentration in den Monaten 5 bis 9",
x = "Tage",
y = "Ozonkonzentration",
color = "Monate") +
theme_minimal()
#
#2. Erstelle ein einfaches Liniendiagramm mit ggplot2, das den Verlauf der Ozonkonzentration im Laufe der Tage darstellt.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month), group = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point() +
labs(title = "Ozonkonzentration in den Monaten 5 bis 9",
x = "Tage",
y = "Ozonkonzentration",
color = "Monate") +
theme_minimal()
#
#4. Passe die x-Achsenbeschriftung an, indem du das Hauptgitter und das Hilfsgitter anpasst.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month), group = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point() +
labs(title = "Ozonkonzentration in den Monaten 5 bis 9",
x = "Tage",
y = "Ozonkonzentration",
color = "Monate") +
theme(panel.grid.major = element_line(color = "grey80", size = 0.8),
panel.grid.minor = element_line(color = "grey90", size = 0.5),)
#
#4. Passe die x-Achsenbeschriftung an, indem du das Hauptgitter und das Hilfsgitter anpasst.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month), group = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point() +
labs(title = "Ozonkonzentration in den Monaten 5 bis 9",
x = "Tage",
y = "Ozonkonzentration",
color = "Monate") +
theme(panel.grid.major = element_line(color = "grey80", size = 5.0),
panel.grid.minor = element_line(color = "grey90", size = 0.5),)
#
#4. Passe die x-Achsenbeschriftung an, indem du das Hauptgitter und das Hilfsgitter anpasst.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month), group = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point() +
labs(title = "Ozonkonzentration in den Monaten 5 bis 9",
x = "Tage",
y = "Ozonkonzentration",
color = "Monate") +
theme(panel.grid.major = element_line(color = "grey80", size = 0.9),
panel.grid.minor = element_line(color = "grey90", size = 0.5),)
#Aufgabe: Liniendiagramme mit ggplot2
#
#a)
#
#Erstelle ein Liniendiagramm mit ggplot2 in R unter Verwendung des Datensatzes „airquality“.
#
#1. Lade den Datensatz "airquality" und bereinige fehlende Werte.
library(ggplot2)
library(tidyverse)
cleaned_up_airquality_df <- airquality %>%
as_tibble() %>%
drop_na()
#
#2. Erstelle ein einfaches Liniendiagramm mit ggplot2, das den Verlauf der Ozonkonzentration im Laufe der Tage darstellt.
#3. Passe das Diagramm an, indem du eine gestrichelte Linie, Datenpunkte und Achsenbeschriftungen hinzufügst.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month), group = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point() +
labs(title = "Ozonkonzentration in den Monaten 5 bis 9",
x = "Tage",
y = "Ozonkonzentration",
color = "Monate") +
theme(panel.grid.major = element_line(color = "blue", size = 0.5, linetype = "solid"),
# Changing the helper grid lines (vertical lines)
panel.grid.minor = element_line(color = "gray", size = 0.25, linetype = "dashed"),
# Customize axis text to make it more readable
axis.text = element_text(size = 12, face = "bold"))
#
#2. Erstelle ein einfaches Liniendiagramm mit ggplot2, das den Verlauf der Ozonkonzentration im Laufe der Tage darstellt.
#3. Passe das Diagramm an, indem du eine gestrichelte Linie, Datenpunkte und Achsenbeschriftungen hinzufügst.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month), group = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point() +
labs(title = "Ozonkonzentration in den Monaten 5 bis 9",
x = "Tage",
y = "Ozonkonzentration",
color = "Monate") +
theme(panel.grid.major = element_line(color = "blue", size = 0.5, linetype = "solid"),
# Changing the helper grid lines (vertical lines)
panel.grid.minor = element_line(color = "gray", size = 0.125, linetype = "dashed"),
# Customize axis text to make it more readable
axis.text = element_text(size = 12, face = "bold"))
#
#2. Erstelle ein einfaches Liniendiagramm mit ggplot2, das den Verlauf der Ozonkonzentration im Laufe der Tage darstellt.
#3. Passe das Diagramm an, indem du eine gestrichelte Linie, Datenpunkte und Achsenbeschriftungen hinzufügst.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month), group = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point() +
labs(title = "Ozonkonzentration in den Monaten 5 bis 9",
x = "Tage",
y = "Ozonkonzentration",
color = "Monate") +
theme(panel.grid.major = element_line(color = "blue", size = 0.5, linetype = "solid"),
# Changing the helper grid lines (vertical lines)
panel.grid.minor = element_line(color = "gray", size = 0.125, linetype = "dashed"),
# Customize axis text to make it more readable
axis.text = element_text(size = 14, face = "bold"))
#
#2. Erstelle ein einfaches Liniendiagramm mit ggplot2, das den Verlauf der Ozonkonzentration im Laufe der Tage darstellt.
#3. Passe das Diagramm an, indem du eine gestrichelte Linie, Datenpunkte und Achsenbeschriftungen hinzufügst.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month), group = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point() +
labs(title = "Ozonkonzentration in den Monaten 5 bis 9",
x = "Tage",
y = "Ozonkonzentration",
color = "Monate") +
theme_classic()
#
#4. Passe die x-Achsenbeschriftung an, indem du das Hauptgitter und das Hilfsgitter anpasst.
#
ggplot(data = cleaned_up_airquality_df, aes(x = Day, y = Ozone, color = as.factor(Month), group = Month)) +
geom_line(linetype = 2, size = 1) +
geom_point() +
labs(title = "Ozonkonzentration in den Monaten 5 bis 9",
x = "Tage",
y = "Ozonkonzentration",
color = "Monate") +
theme(panel.grid.major = element_line(color = "blue", size = 0.5, linetype = "solid"),
# Changing the helper grid lines (vertical lines)
panel.grid.minor = element_line(color = "gray", size = 0.125, linetype = "dashed"),
# Customize axis text to make it more readable
axis.text = element_text(size = 14, face = "bold"))
#Aufgabe: Liniendiagramme mit ggplot2
#
#b)
#
#Erstelle ein Liniendiagramm mit ggplot2 in R, das die Anzahl der Erwerbstätigen und Erwerbslosen im Laufe der Zeit darstellt,
#basierend auf dem Datensatz "economics".
#Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
#1. Lade den Datensatz "economics" und bereinige fehlende Werte.
#
library(tidyverse)
library(ggplot2)
cleaned_up_data <- as_tibble(economics)
View(cleaned_up_data)
cleaned_up_data <- as_tibble(economics) %>%
drop_na()
#2. Transformiere den Datensatz in das Long-Format.
#
summary(cleaned_up_data)
#2. Transformiere den Datensatz in das Long-Format.
#
print(economics)
# Aufgabe b)
# Laden des Datensatzes
data(economics)
# Bereinigung von fehlenden Werten
economics_clean <- na.omit(economics)
library(tidyr)
economics_long <- economics_clean %>%
pivot_longer(cols = c("psavert", "uempmed"), names_to = "Kategorie", values_to = "Wert")
View(economics_clean)
View(economics_long)
View(economics_clean)
View(economics_long)
View(cleaned_up_data)
View(economics_clean)
View(cleaned_up_data)
View(economics_clean)
View(cleaned_up_data)
View(economics_clean)
View(economics_long)
data_with_employed <- cleaned_up_data %>%
mutate(employed = pop - unemploy)
#Aufgabe: Liniendiagramme mit ggplot2
#
#b)
#
#Erstelle ein Liniendiagramm mit ggplot2 in R, das die Anzahl der Erwerbstätigen und Erwerbslosen im Laufe der Zeit darstellt,
#basierend auf dem Datensatz "economics".
#Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
#1. Lade den Datensatz "economics" und bereinige fehlende Werte.
#
library(tidyverse)
library(ggplot2)
cleaned_up_data <- as_tibble(economics) %>%
drop_na()
data_with_employed <- cleaned_up_data %>%
mutate(employed = pop - unemploy)
View(data_with_employed)
ggplot(data_with_employed, aes(x = date, y = unemploy))+
geom_line()
data_with_employed <- cleaned_up_data %>%
mutate(employed = pop - unemploy)
data_with_employed_long <- data_with_employed %>%
pivot_longer(cols = c(unemploy, employed), names_to = "status", values_to = "numbers_in_thousands")
ggplot(data_with_employed, aes(x = date, y = numbers_in_thousands, color = as_factor(status)))+
geom_line()
data_with_employed_long <- data_with_employed %>%
pivot_longer(cols = c(unemploy, employed), names_to = "status", values_to = "numbers_in_thousands")
View(data_with_employed_long)
ggplot(data_with_employed, aes(x = date, y = numbers_in_thousands, color = as_factor(status)))+
geom_line()
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = as_factor(status)))+
geom_line()
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = status))+
geom_line()
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands))+
geom_line()
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands))+
geom_line(color = "black")
data_with_employed_long %>% ggplot(aes(x = date))+
geom_line(aes(y = unemploy), color = "black")
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands))+
geom_line(aes(linetype = status), color = "black")
#4. Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = status))+
geom_line()
#4. Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = status))+
geom_line() +
labs(title = "Beschaeftigte und Unbeschaeftigte in den USA ueber 5 Jahrzehnte")
#4. Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = status))+
geom_line() +
labs(title = "Beschaeftigte und Unbeschaeftigte in den USA ueber 5 Jahrzehnte",
x = "Datum",
y = "Anzahl in Tausend")
#4. Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = status))+
geom_line() +
scale_linetype_manual(values = c("solid", "dashed"),
labels = c("Beschaeftigt", "Unbeschaeftigt")) +
labs(title = "Beschaeftigte und Unbeschaeftigte in den USA ueber 5 Jahrzehnte",
x = "Datum",
y = "Anzahl in Tausend")
#4. Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = status))+
geom_line() +
scale_linetype_manual(values = c("solid", "dashed"),
labels = c("Beschaeftigt", "Unbeschaeftigt")) +
labs(title = "Beschaeftigte und Unbeschaeftigte in den USA ueber 5 Jahrzehnte",
x = "Datum",
y = "Anzahl in Tausend")
#4. Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = status))+
geom_line() +
scale_linetype_manual(values = c("solid", "dashed"),
labels = c("Beschaeftigt", "Unbeschaeftigt")) +
labs(title = "Beschaeftigte und Unbeschaeftigte in den USA ueber 5 Jahrzehnte",
x = "Datum",
y = "Anzahl in Tausend") +
theme_classic()
#4. Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = status))+
geom_line() +
scale_linetype_manual(values = c("solid", "dashed"),
labels = c("Beschaeftigt", "Unbeschaeftigt")) +
labs(title = "Beschaeftigte und Unbeschaeftigte in den USA ueber 5 Jahrzehnte",
x = "Datum",
y = "Anzahl in Tausend") +
theme_minimal()
data_with_employed <- data_with_employed %>%
rename(Beschaeftigte = employed,
Unbeschaeftigte = unemploy)
data_with_employed_long <- data_with_employed %>%
pivot_longer(cols = c(unemploy, employed), names_to = "status", values_to = "numbers_in_thousands")
data_with_employed <- data_with_employed %>%
rename(Beschaeftigte = employed,
Unbeschaeftigte = unemploy)
data_with_employed <- cleaned_up_data %>%
mutate(employed = pop - unemploy)
cleaned_up_data <- as_tibble(economics) %>%
drop_na()
data_with_employed <- cleaned_up_data %>%
mutate(employed = pop - unemploy)
data_with_employed <- data_with_employed %>%
rename(Beschaeftigte = employed,
Unbeschaeftigte = unemploy)
data_with_employed_long <- data_with_employed %>%
pivot_longer(cols = c(Unbeschaeftigte, Beschaeftigte), names_to = "status", values_to = "numbers_in_thousands")
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands))+
geom_line(aes(linetype = status), color = "black")
#4. Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = status))+
geom_line() +
scale_linetype_manual(values = c("solid", "dashed"),
labels = c("Beschaeftigt", "Unbeschaeftigt")) +
labs(title = "Beschaeftigte und Unbeschaeftigte in den USA ueber 5 Jahrzehnte",
x = "Datum",
y = "Anzahl in Tausend") +
theme_minimal()
cleaned_up_data <- as_tibble(economics) %>%
drop_na()
data_with_employed <- cleaned_up_data %>%
mutate(employed = pop - unemploy)
data_with_employed <- data_with_employed %>%
rename(Beschäftigte = employed,
Unbeschäftigte = unemploy)
data_with_employed_long <- data_with_employed %>%
pivot_longer(cols = c(Unbeschäftigte, Beschäftigte), names_to = "status", values_to = "numbers_in_thousands")
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands))+
geom_line(aes(linetype = status), color = "black")
#4. Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = status))+
geom_line() +
scale_linetype_manual(values = c("solid", "dashed"),
labels = c("Beschaeftigt", "Unbeschaeftigt")) +
labs(title = "Beschäftigte und Unbeschäftigte in den USA ueber 5 Jahrzehnte",
x = "Datum",
y = "Anzahl in Tausend") +
theme_minimal()
#4. Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = status))+
geom_line() +
labs(title = "Beschäftigte und Unbeschäftigte in den USA ueber 5 Jahrzehnte",
x = "Datum",
y = "Anzahl in Tausend") +
theme_minimal()
#4. Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = status))+
geom_line() +
labs(title = "Beschäftigte und Unbeschäftigte in den USA ueber 5 Jahrzehnte",
x = "Datum",
y = "Anzahl in Tausend") +
theme(panel.grid.major = element_line(color = "blue", size = 0.5, linetype = "solid"),
# Changing the helper grid lines (vertical lines)
panel.grid.minor = element_line(color = "gray", size = 0.125, linetype = "dashed"),
# Customize axis text to make it more readable
axis.text = element_text(size = 14, face = "bold"))
#4. Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = status))+
geom_line() +
labs(title = "Beschäftigte und Unbeschäftigte in den USA ueber 5 Jahrzehnte",
x = "Datum",
y = "Anzahl in Tausend") +
theme(panel.grid.major = element_line(color = "black", size = 0.25, linetype = "solid"),
# Changing the helper grid lines (vertical lines)
panel.grid.minor = element_line(color = "gray", size = 0.125, linetype = "dashed"),
# Customize axis text to make it more readable
axis.text = element_text(size = 14, face = "bold"))
#4. Passe das Diagramm an, indem du verschiedene Farben, Linienstile und eine Legende hinzufügst.
#
data_with_employed_long %>% ggplot(aes(x = date, y = numbers_in_thousands, color = status))+
geom_line() +
labs(title = "Beschäftigte und Unbeschäftigte in den USA ueber 5 Jahrzehnte",
x = "Datum",
y = "Anzahl in Tausend") +
theme(panel.grid.major = element_line(color = "black", size = 0.25, linetype = "dashed"),
# Changing the helper grid lines (vertical lines)
panel.grid.minor = element_line(color = "gray", size = 0.125, linetype = "dashed"),
# Customize axis text to make it more readable
axis.text = element_text(size = 14, face = "bold"))
