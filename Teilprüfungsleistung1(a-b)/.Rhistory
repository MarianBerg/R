library(tidyverse)
library(readxl)
setwd("G:/Programming/Projekte/Fortbildung/R/Teilprüfungsleistung1(a-b)/Spotify_data")
spotify1 <- read_excel("Spotify music_data1.xlsx")
View(spotify1)
spotify2 <- read_excel("Spotify music_data2.xlsx")
View(spotify2)
spotify_gesamt <- spotify1 %>%
inner_join(spotify2, by = "track_number")
View(spotify_gesamt)
Summary(spotify_gesamt)
Summary(spotify_gesamt)
setwd("G:/Programming/Projekte/Fortbildung/R/Teilprüfungsleistung1(a-b)/Spotify_data")
spotify1 <- read_excel("Spotify music_data1.xlsx")
View(spotify1)
Summary(spotify1)
detach("package:tidyverse", unload = TRUE)
detach("package:tidyr", unload = TRUE)
detach("package:tibble", unload = TRUE)
setwd("G:/Programming/Projekte/Fortbildung/R/Teilprüfungsleistung1(a-b)/Spotify_data")
spotify1 <- read_excel("Spotify music_data1.xlsx")
View(spotify1)
summary(spotify1)
summary(spotify2)
spotify_gesamt <- merge(spotify1, spotify2, by = "track_number")
summary(spotify_gesamt)
#d)
library(tidyverse)
music1 <- spotify_gesamt %>%
select(acousticness, instrumentalness, liveness, loudness, speechiness)
View(music1)
music1 <- spotify_gesamt %>%
select(track_number, acousticness, instrumentalness, liveness, loudness, speechiness)
#Erstelle einen Datensatz, der nur Songs von Britney Spears oder Katy Perry beinhaltet.
#Nenne diesen Datensatz music2.
music2 <- spotify_gesamt %>%
filter(artist == "Britney Spears" | artist == "Katy Perry")
View(music2)
#Erstelle einen Datensatz, der nur Songs enthält,
#die eine größere danceability haben als 0,6. Nenne diesen Datensatz music3.
music3 <- spotify_gesamt %>%
filter(danceability > 0.6)
View(music3)
summary(music3)
#Lasse dir nun einen Datensatz ausgeben,
#der die Track-Nummer, die danceability, duration_ms, liveness und loudness
#der Band WALK THE MOON anzeigt. Nenne diesen Datensatz music4.
music4 <- spotify_gesamt %>%
filter(artist == "WALK THE MOON") %>%
filter(track_number, danceability, duration_ms, liveness, loudness)
setwd("G:/Programming/Projekte/Fortbildung/R/Teilprüfungsleistung1(a-b)/Spotify_data")
#a) Daten laden
spotify1 <- read_excel("Spotify music_data1.xlsx")
summary(spotify1)
spotify2 <- read_excel("Spotify music_data2.xlsx")
summary(spotify2)
#b) und c) Daten zusammenfuehren: Die beiden Dataframes haben die selbe Anzahl an Zeilen,
#aber ungleiche Spalten, abgesehen von "track_number" daher ist ein zusammenfuehren
#der Spalten anhand von "track_number" mit der merge() funktion hier sinnvoll.
spotify_gesamt <- merge(spotify1, spotify2, by = "track_number")
summary(spotify_gesamt)
library(tidyverse)
music1 <- spotify_gesamt %>%
select(track_number, acousticness, instrumentalness, liveness, loudness, speechiness)
#Erstelle einen Datensatz, der nur Songs von Britney Spears oder Katy Perry beinhaltet.
#Nenne diesen Datensatz music2.
music2 <- spotify_gesamt %>%
filter(artist == "Britney Spears" | artist == "Katy Perry")
#Erstelle einen Datensatz, der nur Songs enthält,
#die eine größere danceability haben als 0,6. Nenne diesen Datensatz music3.
music3 <- spotify_gesamt %>%
filter(danceability > 0.6)
summary(music3)
#Lasse dir nun einen Datensatz ausgeben,
#der die Track-Nummer, die danceability, duration_ms, liveness und loudness
#der Band WALK THE MOON anzeigt. Nenne diesen Datensatz music4.
music4 <- spotify_gesamt %>%
filter(artist == "WALK THE MOON") %>%
filter(track_number, danceability, duration_ms, liveness, loudness)
#Lasse dir nun einen Datensatz ausgeben,
#der die Track-Nummer, die danceability, duration_ms, liveness und loudness
#der Band WALK THE MOON anzeigt. Nenne diesen Datensatz music4.
music4 <- spotify_gesamt %>%
filter(artist == "WALK THE MOON") %>%
filter(danceability, duration_ms, liveness, loudness)
%>% filter(track_number,kdanceability, duration_ms, liveness, loudness)
#Lasse dir nun einen Datensatz ausgeben,
#der die Track-Nummer, die danceability, duration_ms, liveness und loudness
#der Band WALK THE MOON anzeigt. Nenne diesen Datensatz music4.
music4 <- spotify_gesamt %>%
filter(artist == "WALK THE MOON") %>% filter(track_number,kdanceability, duration_ms, liveness, loudness)
rlang::last_trace()
#Lasse dir nun einen Datensatz ausgeben,
#der die Track-Nummer, die danceability, duration_ms, liveness und loudness
#der Band WALK THE MOON anzeigt. Nenne diesen Datensatz music4.
music4 <- spotify_gesamt %>%
filter(artist == "WALK THE MOON") %>%
select(track_number,danceability, duration_ms, liveness, loudness)
View(music4)
#Nun soll dem Datensatz music4 noch eine Variable hinzugefügt werden:
#Die Variablen liveness und loudness sollen miteinander multipliziert werden.
music4 <- music4 %>%
mutate(live_times_loudness = liveness * loudness)
#setwd("G:/Programming/Projekte/Fortbildung/R/Teilprüfungsleistung1(a-b)/Spotify_data")
#a) Daten laden
spotify1 <- read_excel("Spotify music_data1.xlsx")
summary(spotify1)
spotify2 <- read_excel("Spotify music_data2.xlsx")
summary(spotify2)
#b) und c) Daten zusammenfuehren: Die beiden Dataframes haben die selbe Anzahl an Zeilen,
#aber ungleiche Spalten, abgesehen von "track_number" daher ist ein zusammenfuehren
#der Spalten anhand von "track_number" mit der merge() funktion hier sinnvoll.
spotify_gesamt <- merge(spotify1, spotify2, by = "track_number")
summary(spotify_gesamt)
library(tidyverse)
music1 <- spotify_gesamt %>%
select(track_number, acousticness, instrumentalness, liveness, loudness, speechiness)
summary(music1)
#Erstelle einen Datensatz, der nur Songs von Britney Spears oder Katy Perry beinhaltet.
#Nenne diesen Datensatz music2.
music2 <- spotify_gesamt %>%
filter(artist == "Britney Spears" | artist == "Katy Perry")
summary(music2)
#Erstelle einen Datensatz, der nur Songs enthält,
#die eine größere danceability haben als 0,6. Nenne diesen Datensatz music3.
music3 <- spotify_gesamt %>%
filter(danceability > 0.6)
summary(music3)
#Lasse dir nun einen Datensatz ausgeben,
#der die Track-Nummer, die danceability, duration_ms, liveness und loudness
#der Band WALK THE MOON anzeigt. Nenne diesen Datensatz music4.
music4 <- spotify_gesamt %>%
filter(artist == "WALK THE MOON") %>%
select(track_number,danceability, duration_ms, liveness, loudness)
#Nun soll dem Datensatz music4 noch eine Variable hinzugefügt werden:
#Die Variablen liveness und loudness sollen miteinander multipliziert werden.
music4 <- music4 %>%
mutate(live_times_loudness = liveness * loudness)
summary(music4)
#Identifiziere die Anzahl fehlender Werte in jeder Variable des Datensatzes spotify_gesamt.
count_missing_values <- spotify_gesamt %>%
summarize_all(~sum(is.na(.)))
print(count_missing_values)
print(count_missing_values)
print(count_missing_values)
#setwd("G:/Programming/Projekte/Fortbildung/R/Teilprüfungsleistung1(a-b)/Spotify_data")
#a) Daten laden
spotify1 <- read_excel("Spotify music_data1.xlsx")
summary(spotify1)
#setwd("G:/Programming/Projekte/Fortbildung/R/Teilprüfungsleistung1(a-b)/Spotify_data")
#a) Daten laden
spotify1 <- read_excel("Spotify music_data1.xlsx")
#setwd("G:/Programming/Projekte/Fortbildung/R/Teilprüfungsleistung1(a-b)/Spotify_data")
#a) Daten laden
library(tidyverse)
spotify1 <- read_excel("Spotify music_data1.xlsx")
summary(spotify1)
spotify2 <- read_excel("Spotify music_data2.xlsx")
summary(spotify2)
#setwd("G:/Programming/Projekte/Fortbildung/R/Teilprüfungsleistung1(a-b)/Spotify_data")
#a) Daten laden
library(readxl)
library(tidyverse)
spotify1 <- read_excel("Spotify music_data1.xlsx")
summary(spotify1)
spotify2 <- read_excel("Spotify music_data2.xlsx")
#setwd("G:/Programming/Projekte/Fortbildung/R/Teilprüfungsleistung1(a-b)/Spotify_data")
#a) Daten laden
library(readxl)
library(tidyverse)
spotify1 <- read_excel("Spotify music_data1.xlsx")
summary(spotify1)
spotify2 <- read_excel("Spotify music_data2.xlsx")
summary(spotify2)
#b) und c) Daten zusammenfuehren: Die beiden Dataframes haben die selbe Anzahl an Zeilen,
#aber ungleiche Spalten, abgesehen von "track_number" daher ist ein zusammenfuehren
#der Spalten anhand von "track_number" mit der merge() funktion hier sinnvoll.
spotify_gesamt <- merge(spotify1, spotify2, by = "track_number")
summary(spotify_gesamt)
music1 <- spotify_gesamt %>%
select(track_number, acousticness, instrumentalness, liveness, loudness, speechiness)
summary(music1)
#Erstelle einen Datensatz, der nur Songs von Britney Spears oder Katy Perry beinhaltet.
#Nenne diesen Datensatz music2.
music2 <- spotify_gesamt %>%
filter(artist == "Britney Spears" | artist == "Katy Perry")
summary(music2)
#Erstelle einen Datensatz, der nur Songs enthält,
#die eine größere danceability haben als 0,6. Nenne diesen Datensatz music3.
music3 <- spotify_gesamt %>%
filter(danceability > 0.6)
summary(music3)
#Lasse dir nun einen Datensatz ausgeben,
#der die Track-Nummer, die danceability, duration_ms, liveness und loudness
#der Band WALK THE MOON anzeigt. Nenne diesen Datensatz music4.
music4 <- spotify_gesamt %>%
filter(artist == "WALK THE MOON") %>%
select(track_number,danceability, duration_ms, liveness, loudness)
#Nun soll dem Datensatz music4 noch eine Variable hinzugefügt werden:
#Die Variablen liveness und loudness sollen miteinander multipliziert werden.
music4 <- music4 %>%
mutate(live_times_loudness = liveness * loudness)
summary(music4)
#Identifiziere die Anzahl fehlender Werte in jeder Variable des Datensatzes spotify_gesamt.
count_missing_values <- spotify_gesamt %>%
summarize_all(~sum(is.na(.)))
print(count_missing_values)
spotify_gesamt_clean <- spotify_gesamt %>%
drop_na()
count_missing_values_clean <- spotify_gesamt_clean %>%
summarize_all(~sum(is.na(.)))
print(count_missing_values_clean)
summary(spotify_gesamt_clean)
spotify_gesamt <- spotify_gesamt %>%
drop_na()
#Exportieren Sie den Datensatz "spotify_gesamt" in eine CSV-Datei und nennen Sie die Datei "spotify_gesamt.csv".
write_csv(spotify_gesamt, "spotify_gesamt.csv")
install.packages("writexl")
library(writexl)
spotify1 <- read_excel("Spotify music_data1.xlsx")
summary(spotify1)
spotify2 <- read_excel("Spotify music_data2.xlsx")
summary(spotify2)
#b) und c) Daten zusammenfuehren: Die beiden Dataframes haben die selbe Anzahl an Zeilen,
#aber ungleiche Spalten, abgesehen von "track_number" daher ist ein zusammenfuehren
#der Spalten anhand von "track_number" mit der merge() funktion hier sinnvoll.
spotify_gesamt <- merge(spotify1, spotify2, by = "track_number")
summary(spotify_gesamt)
music1 <- spotify_gesamt %>%
select(track_number, acousticness, instrumentalness, liveness, loudness, speechiness)
summary(music1)
#Erstelle einen Datensatz, der nur Songs von Britney Spears oder Katy Perry beinhaltet.
#Nenne diesen Datensatz music2.
music2 <- spotify_gesamt %>%
filter(artist == "Britney Spears" | artist == "Katy Perry")
summary(music2)
#Erstelle einen Datensatz, der nur Songs enthält,
#die eine größere danceability haben als 0,6. Nenne diesen Datensatz music3.
music3 <- spotify_gesamt %>%
filter(danceability > 0.6)
summary(music3)
#Lasse dir nun einen Datensatz ausgeben,
#der die Track-Nummer, die danceability, duration_ms, liveness und loudness
#der Band WALK THE MOON anzeigt. Nenne diesen Datensatz music4.
music4 <- spotify_gesamt %>%
filter(artist == "WALK THE MOON") %>%
select(track_number,danceability, duration_ms, liveness, loudness)
#Nun soll dem Datensatz music4 noch eine Variable hinzugefügt werden:
#Die Variablen liveness und loudness sollen miteinander multipliziert werden.
music4 <- music4 %>%
mutate(live_times_loudness = liveness * loudness)
summary(music4)
#Identifiziere die Anzahl fehlender Werte in jeder Variable des Datensatzes spotify_gesamt.
count_missing_values <- spotify_gesamt %>%
summarize_all(~sum(is.na(.)))
print(count_missing_values)
spotify_gesamt <- spotify_gesamt %>%
drop_na()
#Exportieren Sie den Datensatz "spotify_gesamt" in eine CSV-Datei und nennen Sie die Datei "spotify_gesamt.csv".
write_csv(spotify_gesamt, "spotify_gesamt.csv")
#Exportieren Sie den Datensatz "spotify_gesamt" in eine TXT-Datei. Nennen Sie die Datei "spotify_gesamt.txt".
write_delim(spotify_gesamt, "spotify_gesamt.txt", delim = "\t")
#Exportieren Sie den Datensatz "spotify_gesamt" in eine XLS-Datei und nennen Sie die Datei "spotify_gesamt.xlsx".
write_xlsx(spotify_gesamt, "spotify_gesamt.xlsx")
install.packages("readxl")
install.packages("readxl")
install.packages("ggplot2")
install.packages("ggplot2")
