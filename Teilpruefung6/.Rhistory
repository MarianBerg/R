install.packages("rattle")
#a) Lade den Datensatz "wine" und f체hre eine deskriptive Statistik durch,
#um ein grundlegendes Verst채ndnis der Daten zu erlangen.
library(rattle)
data <- as_tibble('wine')
View(data)
data <- as_tibble(wine)
View(data)
library(psych)
describeBy(data$Alcohol, data$Type)
describeBy(data$Malic, data$Type)
describeBy(data$Ash, data$Type)
describeBy(data$Alcalinity, data$Type)
describeBy(data$Magnesium, data$Type)
describeBy(data$Phenols, data$Type)
describeBy(data$Flavanoids, data$Type)
describeBy(data$Nonflavanoids, data$Type)
describeBy(data$Proanthocyanins, data$Type)
describeBy(data$Color, data$Type)
describeBy(data$Hue, data$Type)
describeBy(data$Dilution, data$Type)
describeBy(data$Proline, data$Type)
summary(data)
View(data)
library(ggplot2)
ggplot(data, aes(x = Type, y = Alcohol)) +
geom_boxplot()
library(tidyverse)
all_plots <- function(var) {ggplot(data, aes(x = Type, y = .data[[var]]))) +
all_plots <- function(var) {ggplot(data, aes(x = Type, y = .data[[var]])) +
geom_boxplot()
}
plots <- map(Alcohol:Proline, my_plot)
my_plot <- function(data, var) {ggplot(data, aes(x = Type, y = .data[[var]])) +
geom_boxplot()
}
plots <- select(data, -Type) %>%
names() %>%
map(~ my_plot(data, .x))
print(plot)
for (plot in plots) {
print(plot)
}
for (plot in plots) {
print(plot)
}
for (plot in plots) {
print(plot)
}
print(plots)
data[[0]]
data[[1]]
data[1]
print(plots)
readline(prompt = "Press [Enter] to see the next plot...")
for (plot in plots) {
print(plot)
readline(prompt = "Press [Enter] to see the next plot...")
}
model <- lm(Type ~ Alcohol + Magnesium + Color, data = data)
model <- lm(Ash ~ Alcohol + Magnesium + Color, data = data)
library(car)
vif(model)
model <- lm(Malic ~ Alcohol + Magnesium + Color, data = data)
library(car)
vif(model)
library(car)
model <- lm(Alcohol ~ Magnesium + Color, data = data)
vif(model)
library(car)
model1 <- lm(Alcohol ~ Magnesium + Color, data = data)
vif(model1)
model2 <- lm(Magnesium ~ Alcohol + Color, data = data)
vif(model2)
model3 <- lm(Color ~ Magnesium + Alcohol, data = data)
vif(model3)
#a) Lade den Datensatz "wine" und f체hre eine deskriptive Statistik durch,
#um ein grundlegendes Verst채ndnis der Daten zu erlangen.
library(rattle)
data <- as_tibble(wine)
summary(data)
library(psych)
describeBy(data$Alcohol, data$Type)
describeBy(data$Malic, data$Type)
describeBy(data$Ash, data$Type)
describeBy(data$Alcalinity, data$Type)
describeBy(data$Magnesium, data$Type)
describeBy(data$Phenols, data$Type)
describeBy(data$Flavanoids, data$Type)
describeBy(data$Nonflavanoids, data$Type)
describeBy(data$Proanthocyanins, data$Type)
describeBy(data$Color, data$Type)
describeBy(data$Hue, data$Type)
describeBy(data$Dilution, data$Type)
describeBy(data$Proline, data$Type)
library(ggplot2)
library(tidyverse)
my_plot <- function(data, var) {ggplot(data, aes(x = Type, y = .data[[var]])) +
geom_boxplot()
}
plots <- select(data, -Type) %>%
names() %>%
map(~ my_plot(data, .x))
for (plot in plots) {
print(plot)
readline(prompt = "Druecke [Enter] fuer den naechsten Plot...")
}
Install.packages("rms")
install.packages("rms")
library(rms)
m <- ols(Type ~ Magnesium + Alcohol + Color, data = data)
library(rms)
m <- ols(Type ~ Magnesium + Alcohol + Color, data = data)
vif(m)
ordinal_model <- orm(Type ~ Magnesium + Alcohol + Color, data = data)
ordinal_model
ordinal_model <- orm(Type ~ Magnesium + Alcohol + Color, data = data, x = TRUE, y = TRUE)
ordinal_model
round(exp(coef(ordinal_model)),3)
1 / 9.720000e-01
1/ 1.170000e-01
magnesium_reziprok <- 1 / 9.720000e-01 #reziproke des Magnesiums
magnesium_reziprok
alcohol_reziprok
alcohol_reziprok <- 1/ 1.170000e-01
alcohol_reziprok
